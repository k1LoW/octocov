name: tagpr
on:
  push:
    branches:
      - main

jobs:
  tagpr:
    runs-on: ubuntu-latest
    outputs:
      tagpr-tag: ${{ steps.run-tagpr.outputs.tag }}
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Check out source code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true

      - id: run-tagpr
        name: Run tagpr
        uses: Songmu/tagpr@v1

  darwin-assets:
    name: Release assets for maoOS
    needs: tagpr
    if: needs.tagpr.outputs.tagpr-tag != ''
    runs-on: macos-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Check out source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: latest
          args: --config .goreleaser/darwin.yml --clean --skip=publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload assets
        run: |
          gh release upload ${{ needs.tagpr.outputs.tagpr-tag }} dist/octocov_*.zip dist/checksums-darwin.txt --repo ${{ github.repository }} --clobber
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  linux-assets:
    name: Release assets for Linux
    needs: tagpr
    if: needs.tagpr.outputs.tagpr-tag != ''
    runs-on: ubuntu-latest
    steps:
      - name: Set up gcc-aarch64-linux-gnu
        run: |
          sudo apt-get update || true
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Check out source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: latest
          args: --config .goreleaser/linux.yml --clean --skip=publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload assets
        run: |
          gh release upload ${{ needs.tagpr.outputs.tagpr-tag }} dist/octocov_*.tar.gz dist/octocov_*.apk dist/octocov_*.deb dist/octocov_*.rpm dist/checksums-linux.txt --repo ${{ github.repository }} --clobber
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  windows-assets:
    name: Release assets for Windows
    needs: tagpr
    if: needs.tagpr.outputs.tagpr-tag != ''
    runs-on: windows-latest
    steps:
      - name: Use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: Check out source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: latest
          args: --config .goreleaser/windows.yml --clean --skip=publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload assets
        run: |
          gh release upload ${{ needs.tagpr.outputs.tagpr-tag }} dist/octocov_${{ needs.tagpr.outputs.tagpr-tag }}_windows_arm64.zip dist/octocov_${{ needs.tagpr.outputs.tagpr-tag }}_windows_amd64.zip dist/checksums-windows.txt --repo ${{ github.repository }} --clobber
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  dockerimage:
    needs: tagpr
    if: needs.tagpr.outputs.tagpr-tag != ''
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Check out source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get latest version
        id: latest_version
        run: |
          echo -n 'version=' > $GITHUB_OUTPUT
          gh release list --limit 1 | cut -f 1 >> $GITHUB_OUTPUT
          cat $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/k1low/octocov:${{ steps.latest_version.outputs.version }}
            ghcr.io/k1low/octocov:latest
          labels: |
            org.opencontainers.image.name=octocov
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.version=${{ steps.latest_version.outputs.version }}
            org.opencontainers.image.source=https://github.com/k1LoW/octocov

  release:
    needs: [tagpr, darwin-assets, linux-assets, windows-assets, dockerimage]
    runs-on: ubuntu-latest
    steps:
      - name: Release
        run: |
          gh api /repos/${{ github.repository }}/releases/generate-notes -f tag_name=${{ needs.tagpr.outputs.tagpr-tag }} --jq .body | gh release edit ${{ needs.tagpr.outputs.tagpr-tag }} --repo ${{ github.repository }} --draft=false --latest --notes-file=-
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
